name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Run core tests
      run: |
        pytest tests/ -v
    
    - name: Test basic functionality
      run: |
        python -c "from src.xi import XiOscillator, XiSymbolic, xi_operator; print('RSO imports work!')"
        python -c "from src.xi import XiOscillator; osc = XiOscillator(True); print('Oscillator:', osc.iterate(4))"
        python -c "from src.xi import XiSymbolic, xi_operator; pred = XiSymbolic('Test'); result = xi_operator(pred, 1); print('Xi operator works, generated', len(result), 'expressions')"

  quick-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Run tests
      run: |
        pytest tests/ -v
    
    - name: Test CLI
      run: |
        python src/cli.py demo
    
    - name: Run formal verification
      run: |
        python src/formal_proofs.py