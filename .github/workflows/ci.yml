name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # Don't cancel other jobs if one fails
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
      continue-on-error: false
    
    - name: Test basic imports
      run: |
        python -c "import sys; sys.path.insert(0, 'src'); from xi import XiOscillator; print('âœ“ Basic imports work')"
      continue-on-error: false
    
    - name: Run core tests
      run: |
        python -m pytest tests/ -v --tb=short
      continue-on-error: false
    
    - name: Test basic functionality
      run: |
        python test_basic.py
      continue-on-error: true
    
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.git,__pycache__,build,dist
      continue-on-error: true
    
    - name: Run formal verification
      run: |
        python src/formal_proofs.py
      continue-on-error: true
    
    - name: Test CLI
      run: |
        python src/cli.py demo
      continue-on-error: true

  coverage:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push, not PR
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install pytest-cov
    
    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=src --cov-report=xml --cov-report=html
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Build documentation
      run: |
        # Add documentation build commands here when ready
        echo "Documentation build placeholder"
    
    - name: Check LaTeX paper compiles
      run: |
        sudo apt-get update
        sudo apt-get install -y texlive-latex-base texlive-latex-extra texlive-fonts-recommended
        cd paper
        pdflatex RSO_Framework_LaTeX.tex || echo "LaTeX compilation check completed"